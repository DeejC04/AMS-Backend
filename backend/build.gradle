plugins {
    id 'java'
    id 'war'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
}

version = '1.0.0'
group = 'com.ams'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.postgresql:postgresql:42.6.0'
	implementation 'edu.ksu.canvas:canvas-api:2.0.0'
	implementation 'io.github.cdimascio:dotenv-java:3.0.0'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task processFrontendResources(type: Copy) {
    // Directory containing the artifacts produced by the frontend project
    def frontendProjectBuildDir = project(':frontend').buildDir
    def frontendBuildDir = file("${frontendProjectBuildDir}/www")
    // Directory where the frontend artifacts must be copied to be packaged all together with the backend by the 'war'
    // plugin.
    def frontendResourcesDir = file("${project.buildDir}/resources/main/public")

    group = 'Frontend'
    description = 'Process frontend resources'
    dependsOn(':frontend:assembleFrontend')

    from frontendBuildDir
    into frontendResourcesDir
}

tasks.named('processResources') {
    dependsOn 'processFrontendResources'
}

tasks.named('test') {
	useJUnitPlatform()
}

